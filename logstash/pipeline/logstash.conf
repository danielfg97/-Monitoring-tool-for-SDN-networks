input {
  http_poller {
    id => "info_topology"
    type => "topology"
    urls => {
        topology => "http://10.0.1.12:8181/restconf/operational/network-topology:network-topology"
    }
    user => admin
    password => admin
    request_timeout => 40
    schedule => { "every" => "10s"}
    codec => "json"
  }
  http_poller {
    id => "info_nodes"
    type => "nodes"
    urls => {
        nodes => "http://10.0.1.12:8181/restconf/operational/opendaylight-inventory:nodes"
    }
    user => admin
    password => admin
    request_timeout => 40
    schedule => { "every" => "10s"}
    codec => "json"
  }
  http_poller {
  type => "sflow"
  urls => {
      sflow => {
       method => get
       url => "http://10.0.1.16:8008/activeflows/10.0.1.13/flowgraph-pair/json"
      }
  }
  request_timeout => 40
  schedule => { "every" => "5s"}
  codec => "json"
 }
}

filter {

  if [type] == "sflow"{
    grok {
      match=> { "key" => "%{IP:IPsource},%{IP:IPdest},%{NUMBER:PortSource},%{NUMBER:PortDest}"
      }
    }
  }
  if [type] == "topology" {
    split {
      field => "[network-topology][topology][0][node]"
    }
    mutate{
      add_field => {
        "HOST_IP" => "%{[network-topology][topology][0][node][host-tracker-service:addresses][0][ip]}"
        "HOST_MAC" => "%{[network-topology][topology][0][node][host-tracker-service:addresses][0][mac]}"
        "HOST_ACTIVE" => "%{[network-topology][topology][0][node][host-tracker-service:attachment-points][0][active]}"
        "NODE_ID" => "%{[network-topology][topology][0][node][node-id]}"
      }
    }
    split {
      field => "[network-topology][topology][0][link]"
    }
    mutate{
      add_field =>{
        "dest-node" => "%{[network-topology][topology][0][link][destination][dest-node]}"
        "dest-tp" => "%{[network-topology][topology][0][link][destination][dest-tp]}"
        "source-node" => "%{[network-topology][topology][0][link][source][source-node]}"
        "source-tp" => "%{[network-topology][topology][0][link][source][source-tp]}"
        "link-id" => "%{[network-topology][topology][0][link][link-id]}"
      }
     }
   }
   if [type] == "nodes" {
    split {
      field => "[nodes][node]"
    }
    if [nodes][node][flow-node-inventory:table][68][id] == 0 {
      mutate {
        add_field => {
          "Active_flows" => "%{[nodes][node][flow-node-inventory:table][68][opendaylight-flow-table-statistics:flow-table-statistics][active-flows]}"
          "Packets-looked-up" => "%{[nodes][node][flow-node-inventory:table][68][opendaylight-flow-table-statistics:flow-table-statistics][packets-looked-up]}"
          "Packets-matched" => "%{[nodes][node][flow-node-inventory:table][68][opendaylight-flow-table-statistics:flow-table-statistics][packets-matched]}"
        }
      }
    }
      split {
        field => "[nodes][node][node-connector]"
      }
      mutate {
        add_field => {
        "SWITCH_ID" => "%{[nodes][node][id]}"
        "PORT" => "%{[nodes][node][node-connector][flow-node-inventory:port-number]}"
        "MAC_ADDRESS" => "%{[nodes][node][node-connector][flow-node-inventory:hardware-address]}"
        "Bytes-received" => "%{[nodes][node][node-connector][opendaylight-port-statistics:flow-capable-node-connector-statistics][bytes][received]}"
        "Bytes-transmitted" => "%{[nodes][node][node-connector][opendaylight-port-statistics:flow-capable-node-connector-statistics][bytes][transmitted]}"
        "Packets-received" => "%{[nodes][node][node-connector][opendaylight-port-statistics:flow-capable-node-connector-statistics][packets][received]}"
        "Packets-transmitted" => "%{[nodes][node][node-connector][opendaylight-port-statistics:flow-capable-node-connector-statistics][packets][transmitted]}"
        "Max_switch_tables" => "%{[nodes][node][node-connector][flow-node-inventory:switch-features][max_tables]}"
        "Drops" => "%{[nodes][node][node-connector][opendaylight-port-statistics:flow-capable-node-connector-statistics][transmit-drops]}"
        "Errors" => "%{[nodes][node][node-connector][opendaylight-port-statistics:flow-capable-node-connector-statistics][transmit-errors]}"
        "Link-status" => "%{[nodes][node][node-connector][stp-status-aware-node-connector:status]}"
        "Link-speed" => "%{[nodes][node][node-connector][flow-node-inventory:current-speed]}"
        "Maximum-speed" => "%{[nodes][node][node-connector][flow-node-inventory:maximum-speed]}"
        "Interfaces" => "%{[nodes][node][node-connector][flow-node-inventory:name]}"
        "Link-Down" => "%{[nodes][node][node-connector][flow-node-inventory:state][link-down]}"
       }
      }
      mutate {
        convert => {
          "Active_flows" => "integer"
          "Packets-looked-up" => "integer"
          "Packets-matched" => "integer"
          "PORT" => "integer"
          "Bytes-received" => "integer"
          "Bytes-transmitted" => "integer"
          "Packets-received" => "integer"
          "Packets-transmitted" => "integer"
          "Max_switch_tables" => "integer"
          "Drops" => "integer"
          "Errors" => "integer"
          "Maximum-speed" => "integer"
        }
      }
    }
}
output {
  if [type] == "nodes"{
    elasticsearch {
        hosts => ["10.0.1.11:9200"]
        index => "nodes"
    }
    stdout {}
  }
  if [type] == "topology"{
    elasticsearch {
        hosts => ["10.0.1.11:9200"]
        index => "topology"
    }
    stdout {}
  }
  if [type] == "sflow"{
  elasticsearch {
      hosts => ["10.0.1.11:9200"]
      index => "sflow"
  }
  stdout {}
  }
}
